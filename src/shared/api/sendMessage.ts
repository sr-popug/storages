import { Inputs } from "@/shared/types/inputs";
import { Room } from "@prisma/client";
import axios from "axios";
import { toast } from "sonner";
import numWord from "../scripts/numWord";

type Params = Inputs & { room: Room };

export default function sendMessage(data: Params) {
  const text = `
    üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:

    üìç –•—Ä–∞–Ω–∏–ª–∏—â–µ ‚Ññ ${data.room.number} 
  
    üîπ –†–∞–∑–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã: ${data.room.size.reduce((calc, el, i) => {
      if (i % 2 == 0) {
        calc += ` ${el / 100}–º √ó`;
      } else {
        calc += ` ${el / 100}–º,`;
      }
      return calc;
    }, "")}
    üîπ –°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã: ${data.months} –º–µ—Å—è—Ü${numWord(Number(data.months))}  
    üîπ –ö–ª–∏–µ–Ω—Ç: ${data.name} 
    üîπ –¢–µ–ª–µ—Ñ–æ–Ω: +7${data.phone}

    üìÖ –°—Ç–∞—Ç—É—Å: ${data.room.isOccupied ? "–ó–∞–Ω—è—Ç–∞ ‚ùå" : "–°–≤–æ–±–æ–¥–Ω–∞ ‚úÖ"}  
    ‚è≥ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${data.room.startOccupied || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"}  
    ‚è≥ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${data.room.endOccupied || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"}  

    
  `;

  axios
    .post(`${process.env.NEXT_PUBLIC_URL}/api/send-tg`, { message: text })
    .then(() => {
      location.replace("/rent/success");
    })
    .catch(() => {
      toast.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ");
    });
}
